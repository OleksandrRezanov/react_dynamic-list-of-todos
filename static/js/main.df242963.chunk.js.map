{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","services/handleTodoFilter.ts","index.tsx"],"names":["TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","handleModalShown","TodoFilter","setFilterOptionValue","filterInputValue","setFilterInputValue","onChange","event","currentTarget","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","selectedUser","setSelectedUser","useEffect","userId","href","email","name","App","setTodos","todosLoading","setTodosLoading","filterOptionValue","finally","visibleTodos","todoFromServer","filterBy","filteredTodo","filter","toLowerCase","includes","handleTodoFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df242963.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (param: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  function handleModalShown(todo: Todo) {\n    setSelectedTodo(todo);\n  }\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={\n                classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })\n              }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleModalShown(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': todo.id !== selectedTodo?.id,\n                    'fa-eye-slash': todo.id === selectedTodo?.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  setFilterOptionValue: (param: string) => void,\n  filterInputValue: string,\n  setFilterInputValue: (param: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilterOptionValue,\n  filterInputValue,\n  setFilterInputValue,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={event => setFilterOptionValue(event.currentTarget.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={filterInputValue}\n        onChange={event => setFilterInputValue(event.currentTarget.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {filterInputValue && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setFilterInputValue('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (param: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setSelectedUser);\n  }, [selectedTodo?.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {selectedUser === null ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { handleTodoFilter } from './services/handleTodoFilter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosLoading, setTodosLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterOptionValue, setFilterOptionValue] = useState('all');\n  const [filterInputValue, setFilterInputValue] = useState('');\n\n  useEffect(() => {\n    setTodosLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setTodosLoading(false));\n  }, []);\n\n  const visibleTodos = handleTodoFilter(todos, filterOptionValue, filterInputValue);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterOptionValue={setFilterOptionValue}\n                filterInputValue={filterInputValue}\n                setFilterInputValue={setFilterInputValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todosLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    setSelectedTodo={setSelectedTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport function handleTodoFilter(\n  todoFromServer: Todo[],\n  filterBy: string,\n  title = '',\n): Todo[] {\n  const filteredTodo = todoFromServer\n    .filter(todo => todo.title.toLowerCase().includes(title.toLowerCase()));\n\n  switch (filterBy) {\n    case 'all':\n      return filteredTodo;\n\n    case 'active':\n      return filteredTodo.filter(todo => !todo.completed);\n\n    case 'completed':\n      return filteredTodo.filter(todo => todo.completed);\n\n    default:\n      return filteredTodo;\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}